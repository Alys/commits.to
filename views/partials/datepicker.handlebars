<script>
  $(document).ready(function() {
    var $inputDate = $('#input_date-{{id}}').pickadate();
    var datePicker = $inputDate.pickadate('picker');

    var $inputTime = $('#input_time-{{id}}').pickatime({
      editable: true // FIXME not sure this is actually doing anything
    });
    var timePicker = $inputTime.pickatime('picker');

    var setDate = function() {
      var value = $inputTextDate.val() + ' ' + $inputTextTime.val();
      $('#{{id}}').val(moment(value));
    }

    var $inputTextDate = $('#input_date_text-{{id}}').on({
      change: parseDate,
      focus: function() {
        datePicker.open(false);
      },
      blur: function() {
        datePicker.close();
      }
    });

    var $inputTextTime = $('#input_time_text-{{id}}').on({
      change: parseDate,
      focus: function() {
        timePicker.open(false);
      },
      blur: function() {
        timePicker.close();
        console.log('blur')
        const inputDataValue = $('#input_time_text-{{id}}').val();
        console.log('fuck you ', inputDataValue)
        if (inputDataValue.match(/^(1[0-2]|0?[1-9]):([0-5]?[0-9])(\s?[AP]M)?$/)) {
          $inputTextTime.attr('data-value', inputDataValue);
          setDate();
        }
      }
    });

    var parseDate = function(value) {
      if (!value) return;
      // FIXME: handle timezones better
      var parsedDate = moment(value);
      // var userTimezoneOffset = date.getTimezoneOffset() * 60000;
      // var parsedDate = new Date(date.getTime() + userTimezoneOffset);

      if (parsedDate) {
        console.log('parseDate', value, parsedDate);
        datePicker.set('select', new Date(value));
        timePicker.set('select', parsedDate.format('hh:mm A'));
        $inputTextTime.val(parsedDate.format('hh:mm A'));
      }
    }

    datePicker.on('set', function() {
      const value = this.get('value');
      console.log('set date value', value);
      console.log('set date val', $inputTextDate.val());
      $inputTextDate.val(value);
      setDate();
    });

    timePicker.on('set', function() {
      let value = this.get('value');
      const inputValue = $inputTextTime.val(); //|| moment($inputTextTime.data('value')).format('hh:mm A');
      console.log('set time', value, inputValue);
      $inputTextTime.val(value);
      setDate();
    });

    parseDate($inputTextDate.attr('data-value')); // init with url value or default to tomorrow
  });
</script>

<div class="promise-picker">
  <fieldset>
    <input id="input_date_text-{{id}}" type="text" data-value="{{value}}" class="text-input" readonly>
    <input id="input_date-{{id}}" type="text" class="time-input">
  </fieldset>

  <fieldset>
    <input id="input_time_text-{{id}}" type="text" data-value="{{value}}" class="text-input">
    <input id="input_time-{{id}}" type="text" class="time-input">
  </fieldset>

  <input id="{{id}}" name="{{id}}" type="hidden" value="{{value}}">
</div>
